<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" 
    "http://ibatis.apache.org/dtd/sql-map-2.dtd">


<!-- 不使用namespace是由于sql搜索定位会比较方便 -->
<sqlMap>

    <resultMap id="RM.KlTrainningRecord" class="com.kailian.glo.model.KlTrainningRecord">
        <result property="id" column="id"/>
        <result property="userid" column="userid"/>
        <result property="username" column="username"/>
        <result property="photo" column="photo"/>
        <result property="content" column="content"/>
        <result property="status" column="status"/>
        <result property="addition" column="addition"/>
        <result property="createtimelong" column="createtimelong"/>
        <result property="modifytimelong" column="modifytimelong"/>
        <result property="createuser" column="createuser"/>
        <result property="modifyuser" column="modifyuser"/>
    </resultMap>

	<!-- 用于select查询公用抽取的列 -->
	<sql id="KlTrainningRecord.columns">
	    <![CDATA[
        id ,userid ,username ,photo ,content ,status ,addition ,createtimelong ,modifytimelong ,createuser ,modifyuser 
	    ]]>
	</sql>
	
    <insert id="KlTrainningRecord.insert" >
    <![CDATA[
        INSERT INTO kl_trainning_record (
	        id  ,
	        userid  ,
	        username  ,
	        photo  ,
	        content  ,
	        status  ,
	        addition  ,
	        createtimelong  ,
	        modifytimelong  ,
	        createuser  ,
	        modifyuser  
        ) VALUES (
        	#id# ,
        	#userid# ,
        	#username# ,
        	#photo# ,
        	#content# ,
        	#status# ,
        	#addition# ,
        	#createtimelong# ,
        	#modifytimelong# ,
        	#createuser# ,
        	#modifyuser# 
        )
    ]]>
    <!--
    mysql:		type="post" SELECT  select last_insert_id()
    sqlserver:	type="post" SELECT  @@identity  AS  ID
    sybase:		type="post" SELECT  @@identity  AS  ID
    oracle:		type="pre" 	SELECT  sequenceName.nextval AS ID FROM DUAL
    DB2:		type="pre"	values nextval for sequenceName
    -->
        <selectKey resultClass="long" keyProperty="id"> 
 			SELECT LAST_INSERT_ID() 
		</selectKey>
    </insert>

    <update id="KlTrainningRecord.update" >
    <![CDATA[
        UPDATE kl_trainning_record SET
	        userid = #userid# ,
	        username = #username# ,
	        photo = #photo# ,
	        content = #content# ,
	        status = #status# ,
	        addition = #addition# ,
	        createtimelong = #createtimelong# ,
	        modifytimelong = #modifytimelong# ,
	        createuser = #createuser# ,
	        modifyuser = #modifyuser# 
        WHERE 
	        id = #id# 
    ]]>
    </update>

    <delete id="KlTrainningRecord.delete">
    <![CDATA[
        DELETE FROM kl_trainning_record WHERE
        id = #id# 
    ]]>
    </delete>
    
    <select id="KlTrainningRecord.getById" resultMap="RM.KlTrainningRecord">
	    SELECT <include refid="KlTrainningRecord.columns"/>
	    <![CDATA[
	        FROM kl_trainning_record 
	        WHERE 
		        id = #id# 
	    ]]>
    </select>

	<sql id="KlTrainningRecord.findPage.where">
	    <dynamic prepend="WHERE">
		       <isNotEmpty prepend="AND" property="id">
		             id = #id#
		       </isNotEmpty>
		       <isNotEmpty prepend="AND" property="userid">
		             userid = #userid#
		       </isNotEmpty>
		       <isNotEmpty prepend="AND" property="username">
		             username = #username#
		       </isNotEmpty>
		       <isNotEmpty prepend="AND" property="photo">
		             photo = #photo#
		       </isNotEmpty>
		       <isNotEmpty prepend="AND" property="content">
		             content = #content#
		       </isNotEmpty>
		       <isNotEmpty prepend="AND" property="status">
		             status = #status#
		       </isNotEmpty>
		       <isNotEmpty prepend="AND" property="addition">
		             addition = #addition#
		       </isNotEmpty>
		       <isNotEmpty prepend="AND" property="createtimelong">
		             createtimelong = #createtimelong#
		       </isNotEmpty>
		       <isNotEmpty prepend="AND" property="modifytimelong">
		             modifytimelong = #modifytimelong#
		       </isNotEmpty>
		       <isNotEmpty prepend="AND" property="createuser">
		             createuser = #createuser#
		       </isNotEmpty>
		       <isNotEmpty prepend="AND" property="modifyuser">
		             modifyuser = #modifyuser#
		       </isNotEmpty>
	    </dynamic>	
	</sql>
	 
    <select id="KlTrainningRecord.findPage.count" resultClass="long">
        SELECT count(*) FROM kl_trainning_record <include refid="KlTrainningRecord.findPage.where"/>    
    </select>
    
    <!--
    	分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页
    	因为分页查询将传 #offset#,#pageSize#,#lastRows# 三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现
    -->
    <select id="KlTrainningRecord.findPage" resultMap="RM.KlTrainningRecord">
    	SELECT <include refid="KlTrainningRecord.columns"/> FROM kl_trainning_record 
		<include refid="KlTrainningRecord.findPage.where"/>
		<dynamic prepend="ORDER BY">
			<isNotEmpty property="sortColumns">$sortColumns$</isNotEmpty>
		</dynamic>
    </select>

	
	<select id="KlTrainningRecord.findTop" resultMap="RM.KlTrainningRecord">
    	SELECT <include refid="KlTrainningRecord.columns"/> FROM kl_trainning_record  
    	<include refid="KlTrainningRecord.findPage.where"/>
		<dynamic prepend="ORDER BY">
			<isNotEmpty property="sortColumns">$sortColumns$</isNotEmpty>
		</dynamic>
		<dynamic prepend="limit 0,">
			<isNotEmpty property="maxCount">#maxCount#</isNotEmpty>
		</dynamic>
    </select>

	
</sqlMap>

